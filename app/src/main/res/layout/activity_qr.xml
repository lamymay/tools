<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:orientation="horizontal"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

    <!--二维码输出-->
    <ImageView
            android:id="@+id/qrOutputImage"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerVertical="true"
            android:layout_centerHorizontal="true"

    />

    <!--

android:layout_centerHorizontal="true"

上下居中
android:layout_centerVertical="true"

    -->

    <!-- 点击 识别出条码信息展示-->
    <TextView
            android:id="@+id/qrScanShowText"
            android:text="@string/qrScanShowDefault"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerHorizontal="true"
            android:layout_below="@+id/qrOutputImage"
    />

    <!--输入框-->
    <AutoCompleteTextView
            android:id="@+id/qrInput1"
            android:text="@string/qrInput1Default"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/qrScanShowText"
            android:layout_centerHorizontal="true"
    />

    <!-- 点击 根据输入字符去显示二维码-->
    <Button
            android:id="@+id/qrBtnCreateImg"
            android:text="@string/qrBtnCreateImage"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"

            android:layout_below="@+id/qrInput1"
            android:layout_centerHorizontal="true"
    />

    <!-- 点击 启动相机识别二维码-->
    <Button
            android:id="@+id/qrBtnScanImage"
            android:text="@string/qrBtnScanImage"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@+id/qrBtnCreateImg"
            android:layout_centerHorizontal="true"
    />



</RelativeLayout>


        <!--
        相对布局RelativeLayout
        1. 相对布局(重点)：相对布局是通过相对定位的方式让控件出现在布局任意位置；

        在相对布局中如果不指定控件摆放的位置，那么控件都会被默认放在RelativeLayout的左上角。因此要先指定第一个控件的位置，再根据一个控件去给其他控件布局。

        2. RelativeLayout常见属性：

        相对于父元素给控件布局
        android:layout_centerHrizontal  水平居中
        android:layout_centerVertical 垂直居中
        android:layout_centerInparent    相对于父元素完全居中
        android:layout_alignParentBottom 位于父元素的下边缘
        android:layout_alignParentLeft   位于父元素的左边缘
        android:layout_alignParentRight  位于父元素的右边缘
        android:layout_alignParentTop    位于父元素的上边缘
        android:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到的话就以父元素做参照物

        属性值必须为id的引用名“@id/id-name”
        android:layout_below      位于元素的下方
        android:layout_above      位于元素的的上方
        android:layout_toLeftOf   位于元素的左边
        android:layout_toRightOf  位于元素的右边

        android:layout_alignTop   该元素的上边缘和某元素的的上边缘对齐
        android:layout_alignLeft  该元素的左边缘和某元素的的左边缘对齐
        android:layout_alignBottom 该元素的下边缘和某元素的的下边缘对齐
        android:layout_alignRight  该元素的右边缘和某元素的的右边缘对齐

        给属性赋予像素值
        android:layout_marginBottom      底边缘的距离
        android:layout_marginLeft           左边缘的距离
        android:layout_marginRight         右边缘的距离
        android:layout_marginTop           上边缘的距离

        3. EditText的android:hint ：设置EditText为空时输入框内的提示信息


        参考
        https://blog.csdn.net/cms18374672699/article/details/82596194

        tools:layout_editor_absoluteY="176dp"
        tools:layout_editor_absoluteX="16dp"
        -->
